---
import Layout from '../../layouts/Layout.astro';

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
    <div id="container">
        <div class="wrapper">
            <p>Testing Site</p>
            <input type="file" id="fileInput" />
            <output id="output">No Games Loaded</output>
            <button class="button">RUN</button>
        </div>
        <!-- the original canvas lenght is 144x160 -->
        <canvas width="256" height="256" id="canvas"></canvas>
    </div>
</Layout>

<script>
    import { Gameboy } from '../../lib/Gameboy';
    import { GameboyCanvas } from '../../lib/Ppu/Canvas';
    import { PPU } from '../../lib/Ppu/PPU';
    import { Tile_Decoder_Utils } from '../../lib/Ppu/Tile_Decoder_Utils';
    import { Tile_Mapper_Utils } from '../../lib/Ppu/Tile_Mapper_Utils';
    import { Ram } from '../../lib/Ram/Ram';

    import { loadFile } from '../../lib/utils/File_Utils';

    const input = document.getElementById('fileInput');
    const button = document.querySelector('.button');
    const output = document.getElementById('output');
    const canvas = document.getElementById('canvas');
    const ram = new Ram();
    const APU = new PPU(ram);

    const debugPalette = [
        [255, 0, 0, 255], // color0: bright red
        [0, 255, 0, 255], // color1: bright green
        [0, 0, 255, 255], // color2: bright blue
        [255, 255, 0, 255], // color3: bright yellow
    ];

    const palette = [
        [255, 255, 255, 255], // color0: bright red
        [123, 255, 49, 255], // color1: bright green
        [0, 132, 0, 255], // color2: bright blue
        [0, 0, 0, 255], // color3: bright yellow
    ];
    let gameboy: Gameboy | null = null;
    let gbCanvas = new GameboyCanvas(canvas, palette);

    // EPIC TILE
    const vram: Uint8Array = new Uint8Array([
        // T
        0x3c, 0x7e, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
        0x00,
        // A
        0x7c, 0x7c, 0x0, 0xc6, 0xc6, 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0x0, 0xc6, 0xc6, 0x0, 0x0, 0x0,
        // N
        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x76, 0x76, 0x76, 0x76, 0x6e, 0x6e, 0x66, 0x66, 0x00,
        0x00,
        // G
        0x00, 0x00, 0x7e, 0x7e, 0x7e, 0x7e, 0x60, 0x60, 0x6e, 0x6e, 0x66, 0x66, 0x7e, 0x7e, 0x00,
        0x00,
        // I
        0x00, 0x00, 0x7e, 0x7e, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x7e, 0x7e, 0x00,
        0x00,
        // N
        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x76, 0x76, 0x76, 0x76, 0x6e, 0x6e, 0x66, 0x66, 0x00,
        0x00,
        // A
        0x7c, 0x7c, 0x0, 0xc6, 0xc6, 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0x0, 0xc6, 0xc6, 0x0, 0x0, 0x0,
        // SPACE
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00,
    ]);

    //Canvas
    APU.tileDataCache = Tile_Decoder_Utils.decodeTileData(vram);
    APU.tileCoordinates = Tile_Mapper_Utils.createBasicTileMap();
    APU.tileMapIndices1 = Tile_Mapper_Utils.createBasicTileIndeces();
    gbCanvas.renderTileData(APU.tileDataCache);
    gbCanvas.draw(APU.tileCoordinates, APU.tileMapIndices1);

    console.log(APU.tileDataCache);

    input?.addEventListener('change', async (e) => {
        if (!output) throw new Error('Output element missing');

        const game = await loadFile(e);
        gameboy = new Gameboy(game);
        const { getCartridgeHeaderRaw, inferCartridgeHeader } = gameboy?.cartridge;

        console.log(getCartridgeHeaderRaw());
        console.log(inferCartridgeHeader());

        gameboy.run();

        gameboy.cartridge.checkSum();
        output.innerText = 'Game Loaded';
    });

    button?.addEventListener('click', () => {
        // gameboy?.stop();
        // if (button && gameboy) {
        // 	button.textContent = gameboy.pause ? 'unpause' : 'pause';
        // }
        // if (!gameboy?.pause) gameboy?.run();
        gameboy?.run();
    });
</script>

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        filter: blur(100px);
    }
    #canvas {
        border: 5px solid black;
        /* width: 432px;
        height: 480px; */
        width: calc(256px + 256px);
        height: calc(256px + 256px);

        image-rendering: pixelated;
    }

    main {
        height: 100%;
        display: flex;
        justify-content: center;
    }

    h2 {
        margin: 0 0 1em;
        font-weight: normal;
        color: #111827;
        font-size: 20px;
    }

    p {
        color: #4b5563;
        font-size: 16px;
        line-height: 24px;
        letter-spacing: -0.006em;
        margin: 0;
    }
</style>
