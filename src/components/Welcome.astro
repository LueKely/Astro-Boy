---
import astroLogo from '../assets/astro.svg';
import background from '../assets/background.svg';
---

<div id="container">
    <div class="wrapper">
        <input type="file" id="fileInput" />
        <output id="output">No Games Loaded</output>
        <button class="button">RUN</button>
    </div>
    <!-- the original canvas lenght is 144x160 -->
    <canvas width="256" height="256" id="canvas"></canvas>
</div>

<script>
    import { Gameboy } from '../lib/Gameboy';
    import { GameboyCanvas } from '../lib/Ppu/Canvas';
    import { PPU } from '../lib/Ppu/PPU';
    import { loadFile } from '../lib/utils/File_Utils';

    const input = document.getElementById('fileInput');
    const button = document.querySelector('.button');
    const output = document.getElementById('output');
    const canvas = document.getElementById('canvas');
    const APU = new PPU();

    const debugPalette = [
        [255, 0, 0, 255], // color0: bright red
        [0, 255, 0, 255], // color1: bright green
        [0, 0, 255, 255], // color2: bright blue
        [255, 255, 0, 255], // color3: bright yellow
    ];
    let gameboy: Gameboy | null = null;
    let gbCanvas = new GameboyCanvas(canvas, debugPalette);

    const vram: Uint8Array = new Uint8Array([
        0x3c, 0x7e, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x7e, 0x5e, 0x7e, 0x0a, 0x7c, 0x56, 0x38,
        0x7c,
    ]);

    //Canvas
    APU.tileCache = PPU.decodeTileData(vram);
    gbCanvas.renderTileData(APU.tileCache);
    gbCanvas.draw();

    input?.addEventListener('change', async (e) => {
        if (!output) throw new Error('Output element missing');

        const game = await loadFile(e);
        gameboy = new Gameboy(game);
        const { getCartridgeHeaderRaw, inferCartridgeHeader } = gameboy?.cartridge;

        console.log(getCartridgeHeaderRaw());
        console.log(inferCartridgeHeader());

        gameboy.run();

        gameboy.cartridge.checkSum();
        output.innerText = 'Game Loaded';
    });

    button?.addEventListener('click', () => {
        // gameboy?.stop();
        // if (button && gameboy) {
        // 	button.textContent = gameboy.pause ? 'unpause' : 'pause';
        // }
        // if (!gameboy?.pause) gameboy?.run();
        gameboy?.run();
    });
</script>

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        filter: blur(100px);
    }
    #canvas {
        border: 5px solid black;
        /* width: 432px;
        height: 480px; */
        width: calc(256px + 256px + 256px);
        height: calc(256px + 256px + 256px);

        image-rendering: pixelated;
    }
    #container {
        font-family: Inter, Roboto, 'Helvetica Neue', 'Arial Nova', 'Nimbus Sans', Arial, sans-serif;
        height: 100%;
    }

    main {
        height: 100%;
        display: flex;
        justify-content: center;
    }

    #hero {
        display: flex;
        align-items: start;
        flex-direction: column;
        justify-content: center;
        padding: 16px;
    }

    h1 {
        font-size: 22px;
        margin-top: 0.25em;
    }

    #links {
        display: flex;
        gap: 16px;
    }

    #links a {
        display: flex;
        align-items: center;
        padding: 10px 12px;
        color: #111827;
        text-decoration: none;
        transition: color 0.2s;
    }

    #links a:hover {
        color: rgb(78, 80, 86);
    }

    #links a svg {
        height: 1em;
        margin-left: 8px;
    }

    #links a.button {
        color: white;
        background: linear-gradient(83.21deg, #3245ff 0%, #bc52ee 100%);
        box-shadow:
            inset 0 0 0 1px rgba(255, 255, 255, 0.12),
            inset 0 -2px 0 rgba(0, 0, 0, 0.24);
        border-radius: 10px;
    }

    #links a.button:hover {
        color: rgb(230, 230, 230);
        box-shadow: none;
    }

    pre {
        font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas,
            'DejaVu Sans Mono', monospace;
        font-weight: normal;
        background: linear-gradient(14deg, #d83333 0%, #f041ff 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin: 0;
    }

    h2 {
        margin: 0 0 1em;
        font-weight: normal;
        color: #111827;
        font-size: 20px;
    }

    p {
        color: #4b5563;
        font-size: 16px;
        line-height: 24px;
        letter-spacing: -0.006em;
        margin: 0;
    }

    code {
        display: inline-block;
        background:
            linear-gradient(66.77deg, #f3cddd 0%, #f5cee7 100%) padding-box,
            linear-gradient(155deg, #d83333 0%, #f041ff 18%, #f5cee7 45%) border-box;
        border-radius: 8px;
        border: 1px solid transparent;
        padding: 6px 8px;
    }

    .box {
        padding: 16px;
        background: rgba(255, 255, 255, 1);
        border-radius: 16px;
        border: 1px solid white;
    }

    #news {
        position: absolute;
        bottom: 16px;
        right: 16px;
        max-width: 300px;
        text-decoration: none;
        transition: background 0.2s;
        backdrop-filter: blur(50px);
    }

    #news:hover {
        background: rgba(255, 255, 255, 0.55);
    }

    @media screen and (max-height: 368px) {
        #news {
            display: none;
        }
    }

    @media screen and (max-width: 768px) {
        #container {
            display: flex;
            flex-direction: column;
        }

        #hero {
            display: block;
            padding-top: 10%;
        }

        #links {
            flex-wrap: wrap;
        }

        #links a.button {
            padding: 14px 18px;
        }

        #news {
            right: 16px;
            left: 16px;
            bottom: 2.5rem;
            max-width: 100%;
        }

        h1 {
            line-height: 1.5;
        }
    }
</style>
